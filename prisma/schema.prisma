generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model category {
  id      Int       @id @default(autoincrement())
  name    String
  product product[]
}

model fans {
  fanId     Int
  productId Int
  user      user    @relation(fields: [fanId], references: [id], map: "Fans_fanId_fkey")
  product   product @relation(fields: [productId], references: [id], map: "Fans_productId_fkey")

  @@id([fanId, productId])
  @@index([productId], map: "Fans_productId_fkey")
}

model image {
  id        Int     @id @default(autoincrement())
  url       String
  productId Int
  product   product @relation(fields: [productId], references: [id], map: "Image_productId_fkey")

  @@index([productId], map: "Image_productId_fkey")
}

model product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Decimal  @db.Decimal(7, 2)
  quantity    Int
  sold        Boolean  @default(false)
  sellerId    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  categoryId  Int
  category    category @relation(fields: [categoryId], references: [id], map: "Product_categoryId_fkey")
  user        user     @relation(fields: [sellerId], references: [id], map: "Product_sellerId_fkey")
  fans        fans[]
  image       image[]

  @@index([categoryId], map: "Product_categoryId_fkey")
  @@index([sellerId], map: "Product_sellerId_fkey")
}

model user {
  id           Int       @id @default(autoincrement())
  email        String    @unique(map: "User_email_key")
  name         String?
  bio          String?
  password     String?
  refreshToken String?
  fans         fans[]
  product      product[]
}
